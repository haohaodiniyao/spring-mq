<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
     xmlns:context="http://www.springframework.org/schema/context"
     xmlns:jms="http://www.springframework.org/schema/jms"
     xsi:schemaLocation="
     http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
     http://www.springframework.org/schema/jms http://www.springframework.org/schema/jms/spring-jms-4.3.xsd
     http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd">

	<context:component-scan base-package="com.example.spring.mq" use-default-filters="false">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"></context:include-filter>
	</context:component-scan>





 <!-- jmsFactory -->
 <bean id="JmsFactory" name="jmsFactory" class="org.apache.activemq.ActiveMQConnectionFactory">
    <property name="brokerURL">
      <value>failover://(tcp://10.10.30.44:61616)?randomize=false&amp;jms.useAsyncSend=true&amp;jms.prefetchPolicy.queuePrefetch=1</value>
    </property>
 </bean>

 <!-- topic-->
 <bean id="poolTopicConnectionFactory" class="org.apache.activemq.pool.PooledConnectionFactory">
    <property name="connectionFactory" ref="JmsFactory"></property>
    <property name="maximumActive" value="1"></property>
 </bean>
 <!-- Topic Consumer -->
 <bean id="messageTopicReceiverAsyn" class="com.tuniu.xx.xx.amq.AMQTopicConsumerAsyn"></bean>
 <!-- Topic listener -->
 <jms:listener-container connection-factory="poolTopicConnectionFactory" client-id="XXX-XXX-001" destination-type="durableTopic">
    <jms:listener destination="topic.xx.xx.xx" ref="messageTopicReceiverAsyn" method="onMessage"/>
 </jms:listener-container>

 <!-- queue 配置方法一  -->
 <bean id="poolQueueConnectionFactory" class="org.apache.activemq.pool.PooledConnectionFactory">
    <property name="connectionFactory" ref="JmsFactory"></property>
    <property name="maximumActive" value="1"></property>
 </bean>
 <!-- queue Consumer -->
 <bean id="messageQueueReceiverAsyn" class="com.tuniu.xx.xx.amq.AMQQueueConsumerAsyn"></bean>
 <!-- queue listener -->
 <jms:listener-container connection-factory="poolQueueConnectionFactory" destination-type="queue">
    <jms:listener destination="queue.xx.xx.xx" ref="messageQueueReceiverAsyn" method="onMessage"/>
 </jms:listener-container>
 
 <!-- queue 配置方法二 多线程消费 这里给出的是2个并行消费者 -->
 <bean id="poolQueueConnectionFactory2" class="org.apache.activemq.pool.PooledConnectionFactory">
    <property name="connectionFactory" ref="JmsFactory"></property>
    <property name="maximumActive" value="1"></property>
 </bean>
 <!-- queue destination -->
 <bean id="mq_queue_2" class="org.apache.activemq.command.ActiveMQQueue">
      <constructor-arg index="0" value="queue.xxx.xxx.2" />
  </bean>
 <!-- queue Consumer -->
 <bean id="messageQueueReceiverAsyn" class="com.tuniu.xx.xx.amq.AMQQueueConsumerAsyn"></bean>
 <!-- queue Thread Pool -->
 <bean id= "QueueTaskPool" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
       <property name="corePoolSize" value="2" />
       <property name="maxPoolSize" value="3" />
       <property name="queueCapacity" value="2" />
       <property name="threadNamePrefix" value="QueueTaskPool-" />
   </bean>
  <!-- queue Thread Pool -->
   <bean id="Queue2Listener" class="org.springframework.jms.listener.DefaultMessageListenerContainer">
       <property name="connectionFactory" ref="jmsFactoryCalendar" />
       <property name="concurrentConsumers" value="2" />
       <property name="maxConcurrentConsumers" value="2" />
       <property name="destination" ref="mq_queue_2" />
       <property name="messageListener" ref="messageQueueReceiverAsyn" />
       <property name="receiveTimeout" value="10000" />
       <property name="taskExecutor" ref="QueueTaskPool" />
       <property name="cacheLevel" value="3" />
       <property name="sessionTransacted" value="true" />
   </bean>
</beans>